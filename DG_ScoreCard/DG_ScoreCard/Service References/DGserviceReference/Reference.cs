//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DG_ScoreCard.DGserviceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="login", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char user_activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_cstringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char user_active {
            get {
                return this.user_activeField;
            }
            set {
                if ((this.user_activeField.Equals(value) != true)) {
                    this.user_activeField = value;
                    this.RaisePropertyChanged("user_active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_cstring {
            get {
                return this.user_cstringField;
            }
            set {
                if ((object.ReferenceEquals(this.user_cstringField, value) != true)) {
                    this.user_cstringField = value;
                    this.RaisePropertyChanged("user_cstring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_username {
            get {
                return this.user_usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.user_usernameField, value) != true)) {
                    this.user_usernameField = value;
                    this.RaisePropertyChanged("user_username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="holeLib", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class holeLib : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int b_deductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> b_letterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string b_noteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> h_hazzardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> h_mandoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string h_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int h_numField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int h_parField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string h_unitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int h_yardageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_general_commentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_guideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> m_roadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> m_trailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> m_trashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string r_discField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string r_shotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string t_colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string t_notesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string t_pad_typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int b_deduction {
            get {
                return this.b_deductionField;
            }
            set {
                if ((this.b_deductionField.Equals(value) != true)) {
                    this.b_deductionField = value;
                    this.RaisePropertyChanged("b_deduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> b_letter {
            get {
                return this.b_letterField;
            }
            set {
                if ((this.b_letterField.Equals(value) != true)) {
                    this.b_letterField = value;
                    this.RaisePropertyChanged("b_letter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string b_note {
            get {
                return this.b_noteField;
            }
            set {
                if ((object.ReferenceEquals(this.b_noteField, value) != true)) {
                    this.b_noteField = value;
                    this.RaisePropertyChanged("b_note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> h_hazzards {
            get {
                return this.h_hazzardsField;
            }
            set {
                if ((this.h_hazzardsField.Equals(value) != true)) {
                    this.h_hazzardsField = value;
                    this.RaisePropertyChanged("h_hazzards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> h_mando {
            get {
                return this.h_mandoField;
            }
            set {
                if ((this.h_mandoField.Equals(value) != true)) {
                    this.h_mandoField = value;
                    this.RaisePropertyChanged("h_mando");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h_name {
            get {
                return this.h_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.h_nameField, value) != true)) {
                    this.h_nameField = value;
                    this.RaisePropertyChanged("h_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int h_num {
            get {
                return this.h_numField;
            }
            set {
                if ((this.h_numField.Equals(value) != true)) {
                    this.h_numField = value;
                    this.RaisePropertyChanged("h_num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int h_par {
            get {
                return this.h_parField;
            }
            set {
                if ((this.h_parField.Equals(value) != true)) {
                    this.h_parField = value;
                    this.RaisePropertyChanged("h_par");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h_unit {
            get {
                return this.h_unitField;
            }
            set {
                if ((object.ReferenceEquals(this.h_unitField, value) != true)) {
                    this.h_unitField = value;
                    this.RaisePropertyChanged("h_unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int h_yardage {
            get {
                return this.h_yardageField;
            }
            set {
                if ((this.h_yardageField.Equals(value) != true)) {
                    this.h_yardageField = value;
                    this.RaisePropertyChanged("h_yardage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_general_comments {
            get {
                return this.m_general_commentsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_general_commentsField, value) != true)) {
                    this.m_general_commentsField = value;
                    this.RaisePropertyChanged("m_general_comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_guide {
            get {
                return this.m_guideField;
            }
            set {
                if ((object.ReferenceEquals(this.m_guideField, value) != true)) {
                    this.m_guideField = value;
                    this.RaisePropertyChanged("m_guide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> m_road {
            get {
                return this.m_roadField;
            }
            set {
                if ((this.m_roadField.Equals(value) != true)) {
                    this.m_roadField = value;
                    this.RaisePropertyChanged("m_road");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> m_trail {
            get {
                return this.m_trailField;
            }
            set {
                if ((this.m_trailField.Equals(value) != true)) {
                    this.m_trailField = value;
                    this.RaisePropertyChanged("m_trail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> m_trash {
            get {
                return this.m_trashField;
            }
            set {
                if ((this.m_trashField.Equals(value) != true)) {
                    this.m_trashField = value;
                    this.RaisePropertyChanged("m_trash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string r_disc {
            get {
                return this.r_discField;
            }
            set {
                if ((object.ReferenceEquals(this.r_discField, value) != true)) {
                    this.r_discField = value;
                    this.RaisePropertyChanged("r_disc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string r_shots {
            get {
                return this.r_shotsField;
            }
            set {
                if ((object.ReferenceEquals(this.r_shotsField, value) != true)) {
                    this.r_shotsField = value;
                    this.RaisePropertyChanged("r_shots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string t_color {
            get {
                return this.t_colorField;
            }
            set {
                if ((object.ReferenceEquals(this.t_colorField, value) != true)) {
                    this.t_colorField = value;
                    this.RaisePropertyChanged("t_color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string t_notes {
            get {
                return this.t_notesField;
            }
            set {
                if ((object.ReferenceEquals(this.t_notesField, value) != true)) {
                    this.t_notesField = value;
                    this.RaisePropertyChanged("t_notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string t_pad_type {
            get {
                return this.t_pad_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.t_pad_typeField, value) != true)) {
                    this.t_pad_typeField = value;
                    this.RaisePropertyChanged("t_pad_type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DGserviceReference.IDGservice")]
    public interface IDGservice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getUserID", ReplyAction="http://tempuri.org/IDGservice/getUserIDResponse")]
        string getUserID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getUserID", ReplyAction="http://tempuri.org/IDGservice/getUserIDResponse")]
        System.Threading.Tasks.Task<string> getUserIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertLocation", ReplyAction="http://tempuri.org/IDGservice/insertLocationResponse")]
        void insertLocation(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertLocation", ReplyAction="http://tempuri.org/IDGservice/insertLocationResponse")]
        System.Threading.Tasks.Task insertLocationAsync(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertUser", ReplyAction="http://tempuri.org/IDGservice/insertUserResponse")]
        void insertUser(string username, string fname, string lname, string email, string phone, string shash, string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertUser", ReplyAction="http://tempuri.org/IDGservice/insertUserResponse")]
        System.Threading.Tasks.Task insertUserAsync(string username, string fname, string lname, string email, string phone, string shash, string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkUsername", ReplyAction="http://tempuri.org/IDGservice/checkUsernameResponse")]
        string checkUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkUsername", ReplyAction="http://tempuri.org/IDGservice/checkUsernameResponse")]
        System.Threading.Tasks.Task<string> checkUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkLocation", ReplyAction="http://tempuri.org/IDGservice/checkLocationResponse")]
        bool checkLocation(string address, string state, string city, string country, string zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkLocation", ReplyAction="http://tempuri.org/IDGservice/checkLocationResponse")]
        System.Threading.Tasks.Task<bool> checkLocationAsync(string address, string state, string city, string country, string zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/returnCstringLists", ReplyAction="http://tempuri.org/IDGservice/returnCstringListsResponse")]
        System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.login> returnCstringLists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/returnCstringLists", ReplyAction="http://tempuri.org/IDGservice/returnCstringListsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.login>> returnCstringListsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertCourse", ReplyAction="http://tempuri.org/IDGservice/insertCourseResponse")]
        void insertCourse(
                    string name, 
                    string website, 
                    string phone, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer, 
                    string user, 
                    string address, 
                    string state, 
                    string city, 
                    string country, 
                    string zip, 
                    int park_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertCourse", ReplyAction="http://tempuri.org/IDGservice/insertCourseResponse")]
        System.Threading.Tasks.Task insertCourseAsync(
                    string name, 
                    string website, 
                    string phone, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer, 
                    string user, 
                    string address, 
                    string state, 
                    string city, 
                    string country, 
                    string zip, 
                    int park_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertPark", ReplyAction="http://tempuri.org/IDGservice/insertParkResponse")]
        void insertPark(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertPark", ReplyAction="http://tempuri.org/IDGservice/insertParkResponse")]
        System.Threading.Tasks.Task insertParkAsync(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getParkId", ReplyAction="http://tempuri.org/IDGservice/getParkIdResponse")]
        int getParkId(string park_name, System.Nullable<char> park_private, string park_hours_high, string park_hours_low, System.Nullable<char> park_has_guides, System.Nullable<char> park_pet_friendly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getParkId", ReplyAction="http://tempuri.org/IDGservice/getParkIdResponse")]
        System.Threading.Tasks.Task<int> getParkIdAsync(string park_name, System.Nullable<char> park_private, string park_hours_high, string park_hours_low, System.Nullable<char> park_has_guides, System.Nullable<char> park_pet_friendly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getHole", ReplyAction="http://tempuri.org/IDGservice/getHoleResponse")]
        DG_ScoreCard.DGserviceReference.holeLib getHole();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getHole", ReplyAction="http://tempuri.org/IDGservice/getHoleResponse")]
        System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.holeLib> getHoleAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDGserviceChannel : DG_ScoreCard.DGserviceReference.IDGservice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DGserviceClient : System.ServiceModel.ClientBase<DG_ScoreCard.DGserviceReference.IDGservice>, DG_ScoreCard.DGserviceReference.IDGservice {
        
        public DGserviceClient() {
        }
        
        public DGserviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DGserviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DGserviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DGserviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getUserID(string id) {
            return base.Channel.getUserID(id);
        }
        
        public System.Threading.Tasks.Task<string> getUserIDAsync(string id) {
            return base.Channel.getUserIDAsync(id);
        }
        
        public void insertLocation(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            base.Channel.insertLocation(loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public System.Threading.Tasks.Task insertLocationAsync(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            return base.Channel.insertLocationAsync(loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public void insertUser(string username, string fname, string lname, string email, string phone, string shash, string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            base.Channel.insertUser(username, fname, lname, email, phone, shash, loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public System.Threading.Tasks.Task insertUserAsync(string username, string fname, string lname, string email, string phone, string shash, string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            return base.Channel.insertUserAsync(username, fname, lname, email, phone, shash, loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public string checkUsername(string username) {
            return base.Channel.checkUsername(username);
        }
        
        public System.Threading.Tasks.Task<string> checkUsernameAsync(string username) {
            return base.Channel.checkUsernameAsync(username);
        }
        
        public bool checkLocation(string address, string state, string city, string country, string zip) {
            return base.Channel.checkLocation(address, state, city, country, zip);
        }
        
        public System.Threading.Tasks.Task<bool> checkLocationAsync(string address, string state, string city, string country, string zip) {
            return base.Channel.checkLocationAsync(address, state, city, country, zip);
        }
        
        public System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.login> returnCstringLists(string username) {
            return base.Channel.returnCstringLists(username);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.login>> returnCstringListsAsync(string username) {
            return base.Channel.returnCstringListsAsync(username);
        }
        
        public void insertCourse(
                    string name, 
                    string website, 
                    string phone, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer, 
                    string user, 
                    string address, 
                    string state, 
                    string city, 
                    string country, 
                    string zip, 
                    int park_id) {
            base.Channel.insertCourse(name, website, phone, basket_type, year_established, tee_type, course_type, terrain, basket_maker, course_private, p2p, guide, course_designer, user, address, state, city, country, zip, park_id);
        }
        
        public System.Threading.Tasks.Task insertCourseAsync(
                    string name, 
                    string website, 
                    string phone, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer, 
                    string user, 
                    string address, 
                    string state, 
                    string city, 
                    string country, 
                    string zip, 
                    int park_id) {
            return base.Channel.insertCourseAsync(name, website, phone, basket_type, year_established, tee_type, course_type, terrain, basket_maker, course_private, p2p, guide, course_designer, user, address, state, city, country, zip, park_id);
        }
        
        public void insertPark(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri) {
            base.Channel.insertPark(name, hour_h, hour_l, guide, pet, pri);
        }
        
        public System.Threading.Tasks.Task insertParkAsync(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri) {
            return base.Channel.insertParkAsync(name, hour_h, hour_l, guide, pet, pri);
        }
        
        public int getParkId(string park_name, System.Nullable<char> park_private, string park_hours_high, string park_hours_low, System.Nullable<char> park_has_guides, System.Nullable<char> park_pet_friendly) {
            return base.Channel.getParkId(park_name, park_private, park_hours_high, park_hours_low, park_has_guides, park_pet_friendly);
        }
        
        public System.Threading.Tasks.Task<int> getParkIdAsync(string park_name, System.Nullable<char> park_private, string park_hours_high, string park_hours_low, System.Nullable<char> park_has_guides, System.Nullable<char> park_pet_friendly) {
            return base.Channel.getParkIdAsync(park_name, park_private, park_hours_high, park_hours_low, park_has_guides, park_pet_friendly);
        }
        
        public DG_ScoreCard.DGserviceReference.holeLib getHole() {
            return base.Channel.getHole();
        }
        
        public System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.holeLib> getHoleAsync() {
            return base.Channel.getHoleAsync();
        }
    }
}
