//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DG_ScoreCard.DGserviceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="login", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char user_activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_cstringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char user_active {
            get {
                return this.user_activeField;
            }
            set {
                if ((this.user_activeField.Equals(value) != true)) {
                    this.user_activeField = value;
                    this.RaisePropertyChanged("user_active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_cstring {
            get {
                return this.user_cstringField;
            }
            set {
                if ((object.ReferenceEquals(this.user_cstringField, value) != true)) {
                    this.user_cstringField = value;
                    this.RaisePropertyChanged("user_cstring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_username {
            get {
                return this.user_usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.user_usernameField, value) != true)) {
                    this.user_usernameField = value;
                    this.RaisePropertyChanged("user_username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="holeLib", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class holeLib : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int b_deductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> b_letterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string b_noteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> h_hazzardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> h_mandoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string h_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int h_numField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int h_parField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string h_unitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int h_yardageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_general_commentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_guideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> m_roadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> m_trailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> m_trashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string r_discField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string r_shotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string t_colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string t_notesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string t_pad_typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int b_deduction {
            get {
                return this.b_deductionField;
            }
            set {
                if ((this.b_deductionField.Equals(value) != true)) {
                    this.b_deductionField = value;
                    this.RaisePropertyChanged("b_deduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> b_letter {
            get {
                return this.b_letterField;
            }
            set {
                if ((this.b_letterField.Equals(value) != true)) {
                    this.b_letterField = value;
                    this.RaisePropertyChanged("b_letter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string b_note {
            get {
                return this.b_noteField;
            }
            set {
                if ((object.ReferenceEquals(this.b_noteField, value) != true)) {
                    this.b_noteField = value;
                    this.RaisePropertyChanged("b_note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> h_hazzards {
            get {
                return this.h_hazzardsField;
            }
            set {
                if ((this.h_hazzardsField.Equals(value) != true)) {
                    this.h_hazzardsField = value;
                    this.RaisePropertyChanged("h_hazzards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> h_mando {
            get {
                return this.h_mandoField;
            }
            set {
                if ((this.h_mandoField.Equals(value) != true)) {
                    this.h_mandoField = value;
                    this.RaisePropertyChanged("h_mando");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h_name {
            get {
                return this.h_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.h_nameField, value) != true)) {
                    this.h_nameField = value;
                    this.RaisePropertyChanged("h_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int h_num {
            get {
                return this.h_numField;
            }
            set {
                if ((this.h_numField.Equals(value) != true)) {
                    this.h_numField = value;
                    this.RaisePropertyChanged("h_num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int h_par {
            get {
                return this.h_parField;
            }
            set {
                if ((this.h_parField.Equals(value) != true)) {
                    this.h_parField = value;
                    this.RaisePropertyChanged("h_par");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h_unit {
            get {
                return this.h_unitField;
            }
            set {
                if ((object.ReferenceEquals(this.h_unitField, value) != true)) {
                    this.h_unitField = value;
                    this.RaisePropertyChanged("h_unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int h_yardage {
            get {
                return this.h_yardageField;
            }
            set {
                if ((this.h_yardageField.Equals(value) != true)) {
                    this.h_yardageField = value;
                    this.RaisePropertyChanged("h_yardage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_general_comments {
            get {
                return this.m_general_commentsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_general_commentsField, value) != true)) {
                    this.m_general_commentsField = value;
                    this.RaisePropertyChanged("m_general_comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_guide {
            get {
                return this.m_guideField;
            }
            set {
                if ((object.ReferenceEquals(this.m_guideField, value) != true)) {
                    this.m_guideField = value;
                    this.RaisePropertyChanged("m_guide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> m_road {
            get {
                return this.m_roadField;
            }
            set {
                if ((this.m_roadField.Equals(value) != true)) {
                    this.m_roadField = value;
                    this.RaisePropertyChanged("m_road");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> m_trail {
            get {
                return this.m_trailField;
            }
            set {
                if ((this.m_trailField.Equals(value) != true)) {
                    this.m_trailField = value;
                    this.RaisePropertyChanged("m_trail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> m_trash {
            get {
                return this.m_trashField;
            }
            set {
                if ((this.m_trashField.Equals(value) != true)) {
                    this.m_trashField = value;
                    this.RaisePropertyChanged("m_trash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string r_disc {
            get {
                return this.r_discField;
            }
            set {
                if ((object.ReferenceEquals(this.r_discField, value) != true)) {
                    this.r_discField = value;
                    this.RaisePropertyChanged("r_disc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string r_shots {
            get {
                return this.r_shotsField;
            }
            set {
                if ((object.ReferenceEquals(this.r_shotsField, value) != true)) {
                    this.r_shotsField = value;
                    this.RaisePropertyChanged("r_shots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string t_color {
            get {
                return this.t_colorField;
            }
            set {
                if ((object.ReferenceEquals(this.t_colorField, value) != true)) {
                    this.t_colorField = value;
                    this.RaisePropertyChanged("t_color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string t_notes {
            get {
                return this.t_notesField;
            }
            set {
                if ((object.ReferenceEquals(this.t_notesField, value) != true)) {
                    this.t_notesField = value;
                    this.RaisePropertyChanged("t_notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string t_pad_type {
            get {
                return this.t_pad_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.t_pad_typeField, value) != true)) {
                    this.t_pad_typeField = value;
                    this.RaisePropertyChanged("t_pad_type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="courselist", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class courselist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int c_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int c_id {
            get {
                return this.c_idField;
            }
            set {
                if ((this.c_idField.Equals(value) != true)) {
                    this.c_idField = value;
                    this.RaisePropertyChanged("c_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_name {
            get {
                return this.c_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.c_nameField, value) != true)) {
                    this.c_nameField = value;
                    this.RaisePropertyChanged("c_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="location", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string l_addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string l_cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string l_countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string l_stateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string l_zipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string l_address {
            get {
                return this.l_addressField;
            }
            set {
                if ((object.ReferenceEquals(this.l_addressField, value) != true)) {
                    this.l_addressField = value;
                    this.RaisePropertyChanged("l_address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string l_city {
            get {
                return this.l_cityField;
            }
            set {
                if ((object.ReferenceEquals(this.l_cityField, value) != true)) {
                    this.l_cityField = value;
                    this.RaisePropertyChanged("l_city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string l_country {
            get {
                return this.l_countryField;
            }
            set {
                if ((object.ReferenceEquals(this.l_countryField, value) != true)) {
                    this.l_countryField = value;
                    this.RaisePropertyChanged("l_country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string l_state {
            get {
                return this.l_stateField;
            }
            set {
                if ((object.ReferenceEquals(this.l_stateField, value) != true)) {
                    this.l_stateField = value;
                    this.RaisePropertyChanged("l_state");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string l_zip {
            get {
                return this.l_zipField;
            }
            set {
                if ((object.ReferenceEquals(this.l_zipField, value) != true)) {
                    this.l_zipField = value;
                    this.RaisePropertyChanged("l_zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="course", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class course : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_basket_manuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_basket_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_designField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_has_guideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_payField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_priField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_tee_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_terrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_websiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string c_year_estField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_basket_manu {
            get {
                return this.c_basket_manuField;
            }
            set {
                if ((object.ReferenceEquals(this.c_basket_manuField, value) != true)) {
                    this.c_basket_manuField = value;
                    this.RaisePropertyChanged("c_basket_manu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_basket_type {
            get {
                return this.c_basket_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.c_basket_typeField, value) != true)) {
                    this.c_basket_typeField = value;
                    this.RaisePropertyChanged("c_basket_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_design {
            get {
                return this.c_designField;
            }
            set {
                if ((object.ReferenceEquals(this.c_designField, value) != true)) {
                    this.c_designField = value;
                    this.RaisePropertyChanged("c_design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_email {
            get {
                return this.c_emailField;
            }
            set {
                if ((object.ReferenceEquals(this.c_emailField, value) != true)) {
                    this.c_emailField = value;
                    this.RaisePropertyChanged("c_email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_has_guide {
            get {
                return this.c_has_guideField;
            }
            set {
                if ((object.ReferenceEquals(this.c_has_guideField, value) != true)) {
                    this.c_has_guideField = value;
                    this.RaisePropertyChanged("c_has_guide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_name {
            get {
                return this.c_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.c_nameField, value) != true)) {
                    this.c_nameField = value;
                    this.RaisePropertyChanged("c_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_pay {
            get {
                return this.c_payField;
            }
            set {
                if ((object.ReferenceEquals(this.c_payField, value) != true)) {
                    this.c_payField = value;
                    this.RaisePropertyChanged("c_pay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_phone {
            get {
                return this.c_phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.c_phoneField, value) != true)) {
                    this.c_phoneField = value;
                    this.RaisePropertyChanged("c_phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_pri {
            get {
                return this.c_priField;
            }
            set {
                if ((object.ReferenceEquals(this.c_priField, value) != true)) {
                    this.c_priField = value;
                    this.RaisePropertyChanged("c_pri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_tee_type {
            get {
                return this.c_tee_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.c_tee_typeField, value) != true)) {
                    this.c_tee_typeField = value;
                    this.RaisePropertyChanged("c_tee_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_terrain {
            get {
                return this.c_terrainField;
            }
            set {
                if ((object.ReferenceEquals(this.c_terrainField, value) != true)) {
                    this.c_terrainField = value;
                    this.RaisePropertyChanged("c_terrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_type {
            get {
                return this.c_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.c_typeField, value) != true)) {
                    this.c_typeField = value;
                    this.RaisePropertyChanged("c_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_website {
            get {
                return this.c_websiteField;
            }
            set {
                if ((object.ReferenceEquals(this.c_websiteField, value) != true)) {
                    this.c_websiteField = value;
                    this.RaisePropertyChanged("c_website");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c_year_est {
            get {
                return this.c_year_estField;
            }
            set {
                if ((object.ReferenceEquals(this.c_year_estField, value) != true)) {
                    this.c_year_estField = value;
                    this.RaisePropertyChanged("c_year_est");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="park", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class park : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string p_has_guidesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string p_hours_highField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string p_hours_lowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string p_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string p_pet_friendlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string p_privateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string p_has_guides {
            get {
                return this.p_has_guidesField;
            }
            set {
                if ((object.ReferenceEquals(this.p_has_guidesField, value) != true)) {
                    this.p_has_guidesField = value;
                    this.RaisePropertyChanged("p_has_guides");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string p_hours_high {
            get {
                return this.p_hours_highField;
            }
            set {
                if ((object.ReferenceEquals(this.p_hours_highField, value) != true)) {
                    this.p_hours_highField = value;
                    this.RaisePropertyChanged("p_hours_high");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string p_hours_low {
            get {
                return this.p_hours_lowField;
            }
            set {
                if ((object.ReferenceEquals(this.p_hours_lowField, value) != true)) {
                    this.p_hours_lowField = value;
                    this.RaisePropertyChanged("p_hours_low");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string p_name {
            get {
                return this.p_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.p_nameField, value) != true)) {
                    this.p_nameField = value;
                    this.RaisePropertyChanged("p_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string p_pet_friendly {
            get {
                return this.p_pet_friendlyField;
            }
            set {
                if ((object.ReferenceEquals(this.p_pet_friendlyField, value) != true)) {
                    this.p_pet_friendlyField = value;
                    this.RaisePropertyChanged("p_pet_friendly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string p_private {
            get {
                return this.p_privateField;
            }
            set {
                if ((object.ReferenceEquals(this.p_privateField, value) != true)) {
                    this.p_privateField = value;
                    this.RaisePropertyChanged("p_private");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="course_view_course", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class course_view_course : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string h_colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int h_countField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int h_parField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h_color {
            get {
                return this.h_colorField;
            }
            set {
                if ((object.ReferenceEquals(this.h_colorField, value) != true)) {
                    this.h_colorField = value;
                    this.RaisePropertyChanged("h_color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int h_count {
            get {
                return this.h_countField;
            }
            set {
                if ((this.h_countField.Equals(value) != true)) {
                    this.h_countField = value;
                    this.RaisePropertyChanged("h_count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int h_par {
            get {
                return this.h_parField;
            }
            set {
                if ((this.h_parField.Equals(value) != true)) {
                    this.h_parField = value;
                    this.RaisePropertyChanged("h_par");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="course_view_holes", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class course_view_holes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string b_letterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string h_numField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string h_parField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string h_yardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string t_colorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string b_letter {
            get {
                return this.b_letterField;
            }
            set {
                if ((object.ReferenceEquals(this.b_letterField, value) != true)) {
                    this.b_letterField = value;
                    this.RaisePropertyChanged("b_letter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h_num {
            get {
                return this.h_numField;
            }
            set {
                if ((object.ReferenceEquals(this.h_numField, value) != true)) {
                    this.h_numField = value;
                    this.RaisePropertyChanged("h_num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h_par {
            get {
                return this.h_parField;
            }
            set {
                if ((object.ReferenceEquals(this.h_parField, value) != true)) {
                    this.h_parField = value;
                    this.RaisePropertyChanged("h_par");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h_yard {
            get {
                return this.h_yardField;
            }
            set {
                if ((object.ReferenceEquals(this.h_yardField, value) != true)) {
                    this.h_yardField = value;
                    this.RaisePropertyChanged("h_yard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string t_color {
            get {
                return this.t_colorField;
            }
            set {
                if ((object.ReferenceEquals(this.t_colorField, value) != true)) {
                    this.t_colorField = value;
                    this.RaisePropertyChanged("t_color");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="combobox_item_string", Namespace="http://schemas.datacontract.org/2004/07/WCFwebserviceDG")]
    [System.SerializableAttribute()]
    public partial class combobox_item_string : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string v_stringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string v_string {
            get {
                return this.v_stringField;
            }
            set {
                if ((object.ReferenceEquals(this.v_stringField, value) != true)) {
                    this.v_stringField = value;
                    this.RaisePropertyChanged("v_string");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DGserviceReference.IDGservice")]
    public interface IDGservice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getUserID", ReplyAction="http://tempuri.org/IDGservice/getUserIDResponse")]
        int getUserID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getUserID", ReplyAction="http://tempuri.org/IDGservice/getUserIDResponse")]
        System.Threading.Tasks.Task<int> getUserIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertLocation", ReplyAction="http://tempuri.org/IDGservice/insertLocationResponse")]
        void insertLocation(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertLocation", ReplyAction="http://tempuri.org/IDGservice/insertLocationResponse")]
        System.Threading.Tasks.Task insertLocationAsync(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getLocID", ReplyAction="http://tempuri.org/IDGservice/getLocIDResponse")]
        int getLocID(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getLocID", ReplyAction="http://tempuri.org/IDGservice/getLocIDResponse")]
        System.Threading.Tasks.Task<int> getLocIDAsync(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertUser", ReplyAction="http://tempuri.org/IDGservice/insertUserResponse")]
        void insertUser(string username, string fname, string lname, string email, string phone, string shash, string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertUser", ReplyAction="http://tempuri.org/IDGservice/insertUserResponse")]
        System.Threading.Tasks.Task insertUserAsync(string username, string fname, string lname, string email, string phone, string shash, string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkUsername", ReplyAction="http://tempuri.org/IDGservice/checkUsernameResponse")]
        string checkUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkUsername", ReplyAction="http://tempuri.org/IDGservice/checkUsernameResponse")]
        System.Threading.Tasks.Task<string> checkUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkLocation", ReplyAction="http://tempuri.org/IDGservice/checkLocationResponse")]
        bool checkLocation(string address, string state, string city, string country, string zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkLocation", ReplyAction="http://tempuri.org/IDGservice/checkLocationResponse")]
        System.Threading.Tasks.Task<bool> checkLocationAsync(string address, string state, string city, string country, string zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/returnCstringLists", ReplyAction="http://tempuri.org/IDGservice/returnCstringListsResponse")]
        System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.login> returnCstringLists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/returnCstringLists", ReplyAction="http://tempuri.org/IDGservice/returnCstringListsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.login>> returnCstringListsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertCourse", ReplyAction="http://tempuri.org/IDGservice/insertCourseResponse")]
        void insertCourse(
                    string name, 
                    string website, 
                    string phone, 
                    string email, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer, 
                    int user_id, 
                    int loc_id, 
                    int park_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertCourse", ReplyAction="http://tempuri.org/IDGservice/insertCourseResponse")]
        System.Threading.Tasks.Task insertCourseAsync(
                    string name, 
                    string website, 
                    string phone, 
                    string email, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer, 
                    int user_id, 
                    int loc_id, 
                    int park_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseID", ReplyAction="http://tempuri.org/IDGservice/getCourseIDResponse")]
        int getCourseID(
                    int user_id, 
                    int park_id, 
                    int loc_id, 
                    string name, 
                    string website, 
                    string phone, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseID", ReplyAction="http://tempuri.org/IDGservice/getCourseIDResponse")]
        System.Threading.Tasks.Task<int> getCourseIDAsync(
                    int user_id, 
                    int park_id, 
                    int loc_id, 
                    string name, 
                    string website, 
                    string phone, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseID2", ReplyAction="http://tempuri.org/IDGservice/getCourseID2Response")]
        int getCourseID2(int usr_id, string course_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseID2", ReplyAction="http://tempuri.org/IDGservice/getCourseID2Response")]
        System.Threading.Tasks.Task<int> getCourseID2Async(int usr_id, string course_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkCourseUserExists", ReplyAction="http://tempuri.org/IDGservice/checkCourseUserExistsResponse")]
        bool checkCourseUserExists(int usr_id, string course_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/checkCourseUserExists", ReplyAction="http://tempuri.org/IDGservice/checkCourseUserExistsResponse")]
        System.Threading.Tasks.Task<bool> checkCourseUserExistsAsync(int usr_id, string course_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertPark", ReplyAction="http://tempuri.org/IDGservice/insertParkResponse")]
        void insertPark(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertPark", ReplyAction="http://tempuri.org/IDGservice/insertParkResponse")]
        System.Threading.Tasks.Task insertParkAsync(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/parkExist", ReplyAction="http://tempuri.org/IDGservice/parkExistResponse")]
        bool parkExist(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/parkExist", ReplyAction="http://tempuri.org/IDGservice/parkExistResponse")]
        System.Threading.Tasks.Task<bool> parkExistAsync(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getParkId", ReplyAction="http://tempuri.org/IDGservice/getParkIdResponse")]
        int getParkId(string park_name, System.Nullable<char> park_private, string park_hours_high, string park_hours_low, System.Nullable<char> park_has_guides, System.Nullable<char> park_pet_friendly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getParkId", ReplyAction="http://tempuri.org/IDGservice/getParkIdResponse")]
        System.Threading.Tasks.Task<int> getParkIdAsync(string park_name, System.Nullable<char> park_private, string park_hours_high, string park_hours_low, System.Nullable<char> park_has_guides, System.Nullable<char> park_pet_friendly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getHole", ReplyAction="http://tempuri.org/IDGservice/getHoleResponse")]
        DG_ScoreCard.DGserviceReference.holeLib getHole();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getHole", ReplyAction="http://tempuri.org/IDGservice/getHoleResponse")]
        System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.holeLib> getHoleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertHole", ReplyAction="http://tempuri.org/IDGservice/insertHoleResponse")]
        void insertHole(DG_ScoreCard.DGserviceReference.holeLib h, int course_id, int tee, int basket, int misc, int line);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertHole", ReplyAction="http://tempuri.org/IDGservice/insertHoleResponse")]
        System.Threading.Tasks.Task insertHoleAsync(DG_ScoreCard.DGserviceReference.holeLib h, int course_id, int tee, int basket, int misc, int line);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertHoleInput", ReplyAction="http://tempuri.org/IDGservice/insertHoleInputResponse")]
        void insertHoleInput(string holeinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertHoleInput", ReplyAction="http://tempuri.org/IDGservice/insertHoleInputResponse")]
        System.Threading.Tasks.Task insertHoleInputAsync(string holeinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertBasket", ReplyAction="http://tempuri.org/IDGservice/insertBasketResponse")]
        void insertBasket(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertBasket", ReplyAction="http://tempuri.org/IDGservice/insertBasketResponse")]
        System.Threading.Tasks.Task insertBasketAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertBasketInput", ReplyAction="http://tempuri.org/IDGservice/insertBasketInputResponse")]
        void insertBasketInput(string basketinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertBasketInput", ReplyAction="http://tempuri.org/IDGservice/insertBasketInputResponse")]
        System.Threading.Tasks.Task insertBasketInputAsync(string basketinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/basketExists", ReplyAction="http://tempuri.org/IDGservice/basketExistsResponse")]
        bool basketExists(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/basketExists", ReplyAction="http://tempuri.org/IDGservice/basketExistsResponse")]
        System.Threading.Tasks.Task<bool> basketExistsAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getBasketID", ReplyAction="http://tempuri.org/IDGservice/getBasketIDResponse")]
        int getBasketID(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getBasketID", ReplyAction="http://tempuri.org/IDGservice/getBasketIDResponse")]
        System.Threading.Tasks.Task<int> getBasketIDAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertTee", ReplyAction="http://tempuri.org/IDGservice/insertTeeResponse")]
        void insertTee(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertTee", ReplyAction="http://tempuri.org/IDGservice/insertTeeResponse")]
        System.Threading.Tasks.Task insertTeeAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertTeeInput", ReplyAction="http://tempuri.org/IDGservice/insertTeeInputResponse")]
        void insertTeeInput(string teeinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertTeeInput", ReplyAction="http://tempuri.org/IDGservice/insertTeeInputResponse")]
        System.Threading.Tasks.Task insertTeeInputAsync(string teeinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/teeExists", ReplyAction="http://tempuri.org/IDGservice/teeExistsResponse")]
        bool teeExists(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/teeExists", ReplyAction="http://tempuri.org/IDGservice/teeExistsResponse")]
        System.Threading.Tasks.Task<bool> teeExistsAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getTeeID", ReplyAction="http://tempuri.org/IDGservice/getTeeIDResponse")]
        int getTeeID(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getTeeID", ReplyAction="http://tempuri.org/IDGservice/getTeeIDResponse")]
        System.Threading.Tasks.Task<int> getTeeIDAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertMisc", ReplyAction="http://tempuri.org/IDGservice/insertMiscResponse")]
        void insertMisc(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertMisc", ReplyAction="http://tempuri.org/IDGservice/insertMiscResponse")]
        System.Threading.Tasks.Task insertMiscAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertMiscInput", ReplyAction="http://tempuri.org/IDGservice/insertMiscInputResponse")]
        void insertMiscInput(string miscinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertMiscInput", ReplyAction="http://tempuri.org/IDGservice/insertMiscInputResponse")]
        System.Threading.Tasks.Task insertMiscInputAsync(string miscinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/miscExists", ReplyAction="http://tempuri.org/IDGservice/miscExistsResponse")]
        bool miscExists(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/miscExists", ReplyAction="http://tempuri.org/IDGservice/miscExistsResponse")]
        System.Threading.Tasks.Task<bool> miscExistsAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getMiscID", ReplyAction="http://tempuri.org/IDGservice/getMiscIDResponse")]
        int getMiscID(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getMiscID", ReplyAction="http://tempuri.org/IDGservice/getMiscIDResponse")]
        System.Threading.Tasks.Task<int> getMiscIDAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertHoleLines", ReplyAction="http://tempuri.org/IDGservice/insertHoleLinesResponse")]
        void insertHoleLines(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertHoleLines", ReplyAction="http://tempuri.org/IDGservice/insertHoleLinesResponse")]
        System.Threading.Tasks.Task insertHoleLinesAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertHoleLinesInput", ReplyAction="http://tempuri.org/IDGservice/insertHoleLinesInputResponse")]
        void insertHoleLinesInput(string holelinesinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/insertHoleLinesInput", ReplyAction="http://tempuri.org/IDGservice/insertHoleLinesInputResponse")]
        System.Threading.Tasks.Task insertHoleLinesInputAsync(string holelinesinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/holelinesExists", ReplyAction="http://tempuri.org/IDGservice/holelinesExistsResponse")]
        bool holelinesExists(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/holelinesExists", ReplyAction="http://tempuri.org/IDGservice/holelinesExistsResponse")]
        System.Threading.Tasks.Task<bool> holelinesExistsAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getHoleLinesID", ReplyAction="http://tempuri.org/IDGservice/getHoleLinesIDResponse")]
        int getHoleLinesID(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getHoleLinesID", ReplyAction="http://tempuri.org/IDGservice/getHoleLinesIDResponse")]
        System.Threading.Tasks.Task<int> getHoleLinesIDAsync(DG_ScoreCard.DGserviceReference.holeLib h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getMyCourseList", ReplyAction="http://tempuri.org/IDGservice/getMyCourseListResponse")]
        System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.courselist> getMyCourseList(int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getMyCourseList", ReplyAction="http://tempuri.org/IDGservice/getMyCourseListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.courselist>> getMyCourseListAsync(int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getParkLoc", ReplyAction="http://tempuri.org/IDGservice/getParkLocResponse")]
        DG_ScoreCard.DGserviceReference.location getParkLoc(int course_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getParkLoc", ReplyAction="http://tempuri.org/IDGservice/getParkLocResponse")]
        System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.location> getParkLocAsync(int course_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourse", ReplyAction="http://tempuri.org/IDGservice/getCourseResponse")]
        DG_ScoreCard.DGserviceReference.course getCourse(int course_id, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourse", ReplyAction="http://tempuri.org/IDGservice/getCourseResponse")]
        System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.course> getCourseAsync(int course_id, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getPark", ReplyAction="http://tempuri.org/IDGservice/getParkResponse")]
        DG_ScoreCard.DGserviceReference.park getPark(int course_id, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getPark", ReplyAction="http://tempuri.org/IDGservice/getParkResponse")]
        System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.park> getParkAsync(int course_id, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseViewCourse", ReplyAction="http://tempuri.org/IDGservice/getCourseViewCourseResponse")]
        System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.course_view_course> getCourseViewCourse(int course_id, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseViewCourse", ReplyAction="http://tempuri.org/IDGservice/getCourseViewCourseResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.course_view_course>> getCourseViewCourseAsync(int course_id, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseViewHoles", ReplyAction="http://tempuri.org/IDGservice/getCourseViewHolesResponse")]
        System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.course_view_holes> getCourseViewHoles(int course_id, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseViewHoles", ReplyAction="http://tempuri.org/IDGservice/getCourseViewHolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.course_view_holes>> getCourseViewHolesAsync(int course_id, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseDistinctHoleColors", ReplyAction="http://tempuri.org/IDGservice/getCourseDistinctHoleColorsResponse")]
        System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.combobox_item_string> getCourseDistinctHoleColors(int course_id, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGservice/getCourseDistinctHoleColors", ReplyAction="http://tempuri.org/IDGservice/getCourseDistinctHoleColorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.combobox_item_string>> getCourseDistinctHoleColorsAsync(int course_id, int user_id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDGserviceChannel : DG_ScoreCard.DGserviceReference.IDGservice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DGserviceClient : System.ServiceModel.ClientBase<DG_ScoreCard.DGserviceReference.IDGservice>, DG_ScoreCard.DGserviceReference.IDGservice {
        
        public DGserviceClient() {
        }
        
        public DGserviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DGserviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DGserviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DGserviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int getUserID(string id) {
            return base.Channel.getUserID(id);
        }
        
        public System.Threading.Tasks.Task<int> getUserIDAsync(string id) {
            return base.Channel.getUserIDAsync(id);
        }
        
        public void insertLocation(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            base.Channel.insertLocation(loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public System.Threading.Tasks.Task insertLocationAsync(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            return base.Channel.insertLocationAsync(loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public int getLocID(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            return base.Channel.getLocID(loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public System.Threading.Tasks.Task<int> getLocIDAsync(string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            return base.Channel.getLocIDAsync(loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public void insertUser(string username, string fname, string lname, string email, string phone, string shash, string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            base.Channel.insertUser(username, fname, lname, email, phone, shash, loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public System.Threading.Tasks.Task insertUserAsync(string username, string fname, string lname, string email, string phone, string shash, string loc_address, string loc_state, string loc_city, string loc_country, string loc_zip) {
            return base.Channel.insertUserAsync(username, fname, lname, email, phone, shash, loc_address, loc_state, loc_city, loc_country, loc_zip);
        }
        
        public string checkUsername(string username) {
            return base.Channel.checkUsername(username);
        }
        
        public System.Threading.Tasks.Task<string> checkUsernameAsync(string username) {
            return base.Channel.checkUsernameAsync(username);
        }
        
        public bool checkLocation(string address, string state, string city, string country, string zip) {
            return base.Channel.checkLocation(address, state, city, country, zip);
        }
        
        public System.Threading.Tasks.Task<bool> checkLocationAsync(string address, string state, string city, string country, string zip) {
            return base.Channel.checkLocationAsync(address, state, city, country, zip);
        }
        
        public System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.login> returnCstringLists(string username) {
            return base.Channel.returnCstringLists(username);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.login>> returnCstringListsAsync(string username) {
            return base.Channel.returnCstringListsAsync(username);
        }
        
        public void insertCourse(
                    string name, 
                    string website, 
                    string phone, 
                    string email, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer, 
                    int user_id, 
                    int loc_id, 
                    int park_id) {
            base.Channel.insertCourse(name, website, phone, email, basket_type, year_established, tee_type, course_type, terrain, basket_maker, course_private, p2p, guide, course_designer, user_id, loc_id, park_id);
        }
        
        public System.Threading.Tasks.Task insertCourseAsync(
                    string name, 
                    string website, 
                    string phone, 
                    string email, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer, 
                    int user_id, 
                    int loc_id, 
                    int park_id) {
            return base.Channel.insertCourseAsync(name, website, phone, email, basket_type, year_established, tee_type, course_type, terrain, basket_maker, course_private, p2p, guide, course_designer, user_id, loc_id, park_id);
        }
        
        public int getCourseID(
                    int user_id, 
                    int park_id, 
                    int loc_id, 
                    string name, 
                    string website, 
                    string phone, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer) {
            return base.Channel.getCourseID(user_id, park_id, loc_id, name, website, phone, basket_type, year_established, tee_type, course_type, terrain, basket_maker, course_private, p2p, guide, course_designer);
        }
        
        public System.Threading.Tasks.Task<int> getCourseIDAsync(
                    int user_id, 
                    int park_id, 
                    int loc_id, 
                    string name, 
                    string website, 
                    string phone, 
                    string basket_type, 
                    string year_established, 
                    string tee_type, 
                    string course_type, 
                    string terrain, 
                    string basket_maker, 
                    System.Nullable<char> course_private, 
                    System.Nullable<char> p2p, 
                    System.Nullable<char> guide, 
                    string course_designer) {
            return base.Channel.getCourseIDAsync(user_id, park_id, loc_id, name, website, phone, basket_type, year_established, tee_type, course_type, terrain, basket_maker, course_private, p2p, guide, course_designer);
        }
        
        public int getCourseID2(int usr_id, string course_name) {
            return base.Channel.getCourseID2(usr_id, course_name);
        }
        
        public System.Threading.Tasks.Task<int> getCourseID2Async(int usr_id, string course_name) {
            return base.Channel.getCourseID2Async(usr_id, course_name);
        }
        
        public bool checkCourseUserExists(int usr_id, string course_name) {
            return base.Channel.checkCourseUserExists(usr_id, course_name);
        }
        
        public System.Threading.Tasks.Task<bool> checkCourseUserExistsAsync(int usr_id, string course_name) {
            return base.Channel.checkCourseUserExistsAsync(usr_id, course_name);
        }
        
        public void insertPark(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri) {
            base.Channel.insertPark(name, hour_h, hour_l, guide, pet, pri);
        }
        
        public System.Threading.Tasks.Task insertParkAsync(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri) {
            return base.Channel.insertParkAsync(name, hour_h, hour_l, guide, pet, pri);
        }
        
        public bool parkExist(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri) {
            return base.Channel.parkExist(name, hour_h, hour_l, guide, pet, pri);
        }
        
        public System.Threading.Tasks.Task<bool> parkExistAsync(string name, string hour_h, string hour_l, System.Nullable<char> guide, System.Nullable<char> pet, System.Nullable<char> pri) {
            return base.Channel.parkExistAsync(name, hour_h, hour_l, guide, pet, pri);
        }
        
        public int getParkId(string park_name, System.Nullable<char> park_private, string park_hours_high, string park_hours_low, System.Nullable<char> park_has_guides, System.Nullable<char> park_pet_friendly) {
            return base.Channel.getParkId(park_name, park_private, park_hours_high, park_hours_low, park_has_guides, park_pet_friendly);
        }
        
        public System.Threading.Tasks.Task<int> getParkIdAsync(string park_name, System.Nullable<char> park_private, string park_hours_high, string park_hours_low, System.Nullable<char> park_has_guides, System.Nullable<char> park_pet_friendly) {
            return base.Channel.getParkIdAsync(park_name, park_private, park_hours_high, park_hours_low, park_has_guides, park_pet_friendly);
        }
        
        public DG_ScoreCard.DGserviceReference.holeLib getHole() {
            return base.Channel.getHole();
        }
        
        public System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.holeLib> getHoleAsync() {
            return base.Channel.getHoleAsync();
        }
        
        public void insertHole(DG_ScoreCard.DGserviceReference.holeLib h, int course_id, int tee, int basket, int misc, int line) {
            base.Channel.insertHole(h, course_id, tee, basket, misc, line);
        }
        
        public System.Threading.Tasks.Task insertHoleAsync(DG_ScoreCard.DGserviceReference.holeLib h, int course_id, int tee, int basket, int misc, int line) {
            return base.Channel.insertHoleAsync(h, course_id, tee, basket, misc, line);
        }
        
        public void insertHoleInput(string holeinput) {
            base.Channel.insertHoleInput(holeinput);
        }
        
        public System.Threading.Tasks.Task insertHoleInputAsync(string holeinput) {
            return base.Channel.insertHoleInputAsync(holeinput);
        }
        
        public void insertBasket(DG_ScoreCard.DGserviceReference.holeLib h) {
            base.Channel.insertBasket(h);
        }
        
        public System.Threading.Tasks.Task insertBasketAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.insertBasketAsync(h);
        }
        
        public void insertBasketInput(string basketinput) {
            base.Channel.insertBasketInput(basketinput);
        }
        
        public System.Threading.Tasks.Task insertBasketInputAsync(string basketinput) {
            return base.Channel.insertBasketInputAsync(basketinput);
        }
        
        public bool basketExists(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.basketExists(h);
        }
        
        public System.Threading.Tasks.Task<bool> basketExistsAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.basketExistsAsync(h);
        }
        
        public int getBasketID(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.getBasketID(h);
        }
        
        public System.Threading.Tasks.Task<int> getBasketIDAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.getBasketIDAsync(h);
        }
        
        public void insertTee(DG_ScoreCard.DGserviceReference.holeLib h) {
            base.Channel.insertTee(h);
        }
        
        public System.Threading.Tasks.Task insertTeeAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.insertTeeAsync(h);
        }
        
        public void insertTeeInput(string teeinput) {
            base.Channel.insertTeeInput(teeinput);
        }
        
        public System.Threading.Tasks.Task insertTeeInputAsync(string teeinput) {
            return base.Channel.insertTeeInputAsync(teeinput);
        }
        
        public bool teeExists(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.teeExists(h);
        }
        
        public System.Threading.Tasks.Task<bool> teeExistsAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.teeExistsAsync(h);
        }
        
        public int getTeeID(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.getTeeID(h);
        }
        
        public System.Threading.Tasks.Task<int> getTeeIDAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.getTeeIDAsync(h);
        }
        
        public void insertMisc(DG_ScoreCard.DGserviceReference.holeLib h) {
            base.Channel.insertMisc(h);
        }
        
        public System.Threading.Tasks.Task insertMiscAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.insertMiscAsync(h);
        }
        
        public void insertMiscInput(string miscinput) {
            base.Channel.insertMiscInput(miscinput);
        }
        
        public System.Threading.Tasks.Task insertMiscInputAsync(string miscinput) {
            return base.Channel.insertMiscInputAsync(miscinput);
        }
        
        public bool miscExists(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.miscExists(h);
        }
        
        public System.Threading.Tasks.Task<bool> miscExistsAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.miscExistsAsync(h);
        }
        
        public int getMiscID(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.getMiscID(h);
        }
        
        public System.Threading.Tasks.Task<int> getMiscIDAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.getMiscIDAsync(h);
        }
        
        public void insertHoleLines(DG_ScoreCard.DGserviceReference.holeLib h) {
            base.Channel.insertHoleLines(h);
        }
        
        public System.Threading.Tasks.Task insertHoleLinesAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.insertHoleLinesAsync(h);
        }
        
        public void insertHoleLinesInput(string holelinesinput) {
            base.Channel.insertHoleLinesInput(holelinesinput);
        }
        
        public System.Threading.Tasks.Task insertHoleLinesInputAsync(string holelinesinput) {
            return base.Channel.insertHoleLinesInputAsync(holelinesinput);
        }
        
        public bool holelinesExists(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.holelinesExists(h);
        }
        
        public System.Threading.Tasks.Task<bool> holelinesExistsAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.holelinesExistsAsync(h);
        }
        
        public int getHoleLinesID(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.getHoleLinesID(h);
        }
        
        public System.Threading.Tasks.Task<int> getHoleLinesIDAsync(DG_ScoreCard.DGserviceReference.holeLib h) {
            return base.Channel.getHoleLinesIDAsync(h);
        }
        
        public System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.courselist> getMyCourseList(int user_id) {
            return base.Channel.getMyCourseList(user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.courselist>> getMyCourseListAsync(int user_id) {
            return base.Channel.getMyCourseListAsync(user_id);
        }
        
        public DG_ScoreCard.DGserviceReference.location getParkLoc(int course_id) {
            return base.Channel.getParkLoc(course_id);
        }
        
        public System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.location> getParkLocAsync(int course_id) {
            return base.Channel.getParkLocAsync(course_id);
        }
        
        public DG_ScoreCard.DGserviceReference.course getCourse(int course_id, int user_id) {
            return base.Channel.getCourse(course_id, user_id);
        }
        
        public System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.course> getCourseAsync(int course_id, int user_id) {
            return base.Channel.getCourseAsync(course_id, user_id);
        }
        
        public DG_ScoreCard.DGserviceReference.park getPark(int course_id, int user_id) {
            return base.Channel.getPark(course_id, user_id);
        }
        
        public System.Threading.Tasks.Task<DG_ScoreCard.DGserviceReference.park> getParkAsync(int course_id, int user_id) {
            return base.Channel.getParkAsync(course_id, user_id);
        }
        
        public System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.course_view_course> getCourseViewCourse(int course_id, int user_id) {
            return base.Channel.getCourseViewCourse(course_id, user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.course_view_course>> getCourseViewCourseAsync(int course_id, int user_id) {
            return base.Channel.getCourseViewCourseAsync(course_id, user_id);
        }
        
        public System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.course_view_holes> getCourseViewHoles(int course_id, int user_id) {
            return base.Channel.getCourseViewHoles(course_id, user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.course_view_holes>> getCourseViewHolesAsync(int course_id, int user_id) {
            return base.Channel.getCourseViewHolesAsync(course_id, user_id);
        }
        
        public System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.combobox_item_string> getCourseDistinctHoleColors(int course_id, int user_id) {
            return base.Channel.getCourseDistinctHoleColors(course_id, user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DG_ScoreCard.DGserviceReference.combobox_item_string>> getCourseDistinctHoleColorsAsync(int course_id, int user_id) {
            return base.Channel.getCourseDistinctHoleColorsAsync(course_id, user_id);
        }
    }
}
